{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Spade Tenant Application",
        "title": "Spade Tenant API",
        "termsOfService": "https://spade.storage",
        "contact": {
            "name": "API Support",
            "url": "https://docs.spade.storage"
        },
        "license": {
            "name": "Apache 2.0 Apache-2.0 OR MIT",
            "url": "https://github.com/data-preservation-programs/spade/blob/master/LICENSE.md"
        },
        "version": "1.0.0"
    },
    "host": "api.spade.storage",
    "basePath": "/tenant",
    "paths": {
        "/addresses": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get addresses used by a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update addresses associated with a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New addresses to add or change is_signing flag of",
                        "name": "addresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AddressMutable"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete addresses used by a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "addresses to delete",
                        "name": "addresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets info about collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.Collection"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Collection to create",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MutableCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.Collection"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/collections/:collectionUUID": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Modify a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Collection UUID to modify",
                        "name": "collectionUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Collection data to update",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MutableCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.Collection"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Collection UUID to modify",
                        "name": "collectionUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/constraint-labels": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List all constraint labels for the tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Label"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get the currently active Tenant Settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.Settings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Apply new Tenant Settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New settings to apply",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.Settings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of Storage Providers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.StorageProvider"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/approve": {
            "post": {
                "description": "Note: This is only required if auto_approve is false, requiring manual approval of SP subscription",
                "produces": [
                    "application/json"
                ],
                "summary": "Approves a list of Storage Providers to work with the tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "List of SP IDs to approve",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StorageProviderIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.StorageProvider"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/eligibility-criteria": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get sp eligibility criteria",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.EligibilityCriteria"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Set sp eligibility criteria",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New eligibility criteria to update to",
                        "name": "elibility_criteria",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.EligibilityCriteria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.EligibilityCriteria"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/suspend": {
            "post": {
                "description": "Note: This is only required if auto_suspend is false, as manual suspension is required",
                "produces": [
                    "application/json"
                ],
                "summary": "Suspend storage providers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "List of SP IDs to suspend",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StorageProviderIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.StorageProvider"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/unsuspend": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Unsuspend a storage provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "List of SP IDs to unsuspend",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StorageProviderIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.StorageProvider"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "This endpoint is used to check the health of the service",
                "produces": [
                    "application/json"
                ],
                "summary": "Simple health check endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/storage-contract": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get tenant storage contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.AddressedStorageContract"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Updates the storage contract. \u003cbr/\u003e\n\u003cbr/\u003e *Note* this will require SPs to resubscribe if changed.\n\u003cbr/\u003e *Note* CID is optional, if specified, then `storage_contract` becomes optional.\nIf both are specified, then we will validate that the CID matches the proposed storage contract and return an error if not.\nIf only CID is specified, then we will fetch it and update the storage contract to it.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update storage contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New Storage Contract to update to",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddressedStorageContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.AddressedStorageContract"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Address": {
            "type": "object",
            "properties": {
                "actor_id": {
                    "description": "TODO :swagger docs should be null not 0",
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "is_signing": {
                    "description": "true - active dealmaking from this address, false - still counts as an associated wallet",
                    "type": "boolean"
                }
            }
        },
        "api.AddressMutable": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "is_signing": {
                    "description": "true - active dealmaking from this address, false - still counts as an associated wallet",
                    "type": "boolean"
                }
            }
        },
        "api.AddressedStorageContract": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "storage_contract": {
                    "$ref": "#/definitions/api.StorageContract"
                }
            }
        },
        "api.Collection": {
            "type": "object",
            "properties": {
                "deal_params": {
                    "$ref": "#/definitions/api.DealParams"
                },
                "inactive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "piece_list_source": {
                    "$ref": "#/definitions/api.PieceListSource"
                },
                "replication_constraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ReplicationConstraint"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "api.DealParams": {
            "type": "object",
            "properties": {
                "duration_days": {
                    "type": "integer"
                },
                "start_within_hours": {
                    "type": "integer"
                }
            }
        },
        "api.EligibilityClause": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "description": "TODO: type - either []string or string"
                }
            }
        },
        "api.EligibilityCriteria": {
            "type": "object",
            "properties": {
                "clauses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.EligibilityClause"
                    }
                }
            }
        },
        "api.Label": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "options": {
                    "description": "example: {\"CANADA\": 10, \"USA\": 20}",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "api.MutableCollection": {
            "type": "object",
            "properties": {
                "deal_params": {
                    "$ref": "#/definitions/api.DealParams"
                },
                "inactive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "piece_list_source": {
                    "$ref": "#/definitions/api.PieceListSource"
                },
                "replication_constraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ReplicationConstraint"
                    }
                }
            }
        },
        "api.PieceListSource": {
            "type": "object",
            "properties": {
                "connection_details": {
                    "description": "TODO: better types / validation for the connection details",
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "poll_interval_hours": {
                    "type": "integer"
                }
            }
        },
        "api.ReplicationConstraint": {
            "type": "object",
            "properties": {
                "constraint_id": {
                    "type": "integer"
                },
                "constraint_max": {
                    "type": "integer"
                }
            }
        },
        "api.ResponseEnvelope": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_slug": {
                    "type": "string"
                },
                "info_lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "request_uuid": {
                    "type": "string"
                },
                "response": {},
                "response_code": {
                    "type": "integer"
                },
                "response_entries": {
                    "type": "integer"
                },
                "response_state_epoch": {
                    "type": "integer"
                },
                "response_timestamp": {
                    "type": "string"
                }
            }
        },
        "api.Settings": {
            "type": "object",
            "properties": {
                "max_in_flight_gib": {
                    "type": "integer"
                },
                "sp_auto_approve": {
                    "type": "boolean"
                },
                "sp_auto_suspend": {
                    "type": "boolean"
                }
            }
        },
        "api.StorageContract": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "object",
                    "properties": {
                        "info_lines": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "retrieval": {
                    "type": "object",
                    "properties": {
                        "mechanisms": {
                            "type": "object",
                            "properties": {
                                "ipld_bitswap": {
                                    "type": "boolean"
                                },
                                "piece_rrhttp": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "sla": {
                            "type": "object",
                            "properties": {
                                "info_lines": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "api.StorageProvider": {
            "type": "object",
            "properties": {
                "first_activated_at": {
                    "type": "string"
                },
                "sp_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "Status:\n* eligible: The SP is eligible to work with the tenant, but has not yet begun the subscription process\n* pending-approval: The SP has begun the subscription process, but has not yet been approved by the tenant (note: only valid if auto-approve=false)\n* active: The SP is active and working with the tenant. Deals may be made with this SP.\n* suspended: The SP is suspended and deals may not be made with this SP, until it is un-suspended",
                    "type": "string",
                    "enum": [
                        "eligible",
                        "pending-approval",
                        "active",
                        "suspended"
                    ]
                },
                "status_last_changed": {
                    "type": "string"
                }
            }
        },
        "api.StorageProviderIDs": {
            "type": "object",
            "properties": {
                "sp_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}