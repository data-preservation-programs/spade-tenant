// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://spade.storage",
        "contact": {
            "name": "API Support",
            "url": "https://docs.spade.storage"
        },
        "license": {
            "name": "Apache 2.0 Apache-2.0 OR MIT",
            "url": "https://github.com/data-preservation-programs/spade/blob/master/LICENSE.md"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/collections": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets info about collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Collection"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Collection to create",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.CreateCollectionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "This endpoint is used to check the health of the service",
                "produces": [
                    "application/json"
                ],
                "summary": "Simple health check endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.HealthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/legend": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get legend for a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.LegendEntry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update legend for a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New legend to update",
                        "name": "legend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.LegendEntry"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.LegendEntry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/mailbox": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets mailbox messages for the tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.MailboxMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/policy": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get tenant policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.Policy"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Set or update a policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New policy to update to",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Policy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.Policy"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/policy/storage-contract": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get tenant storage contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.GetStorageContractResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Updates the storage contract *note* this will require SPs to resubscribe if changed",
                "produces": [
                    "application/json"
                ],
                "summary": "Update storage contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New Storage Contract to update to",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StorageContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.StorageContract"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/storage-providers/approve": {
            "post": {
                "description": "Note: This is only required if auto_approve is false, requiring manual approval of SP subscription",
                "produces": [
                    "application/json"
                ],
                "summary": "Approves a list of Storage Providers to work with the tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "List of SP IDs to approve",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ApproveStorageProviders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.GetEligibleStorageProvidersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/storage-providers/eligible": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of Storage Providers not yet working with the tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.GetEligibleStorageProvidersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/storage-providers/subscribed": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of Storage Providers already working with the tenant, and their stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.GetSubscribedStorageProvidersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/tenant/settings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get the currently active Tenant Settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.TenantSettings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Apply new Tenant Settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New settings to apply",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TenantSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "$ref": "#/definitions/api.TenantSettings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/wallet-addresses": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get wallets used by a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Wallet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update wallets used by a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New wallets to add or change Active flag of",
                        "name": "wallets",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Wallet"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Wallet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete wallets used by a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "wallet addresses to delete",
                        "name": "wallets",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.Wallet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApproveStorageProviders": {
            "type": "object",
            "properties": {
                "sp_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.Collection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "num_deals": {
                    "type": "integer"
                },
                "onboarded_progress": {
                    "type": "number"
                },
                "overall_retrieval_success_rate": {
                    "type": "number"
                }
            }
        },
        "api.CreateCollectionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "piece_source": {
                    "$ref": "#/definitions/api.PieceSource"
                },
                "replication_constraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ReplicationConstraint"
                    }
                }
            }
        },
        "api.CreateCollectionResponse": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.EligibleStorageProvider": {
            "type": "object",
            "properties": {
                "sp_id": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                }
            }
        },
        "api.GetEligibleStorageProvidersResponse": {
            "type": "object",
            "properties": {
                "eligible_storage_providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.EligibleStorageProvider"
                    }
                }
            }
        },
        "api.GetStorageContractResponse": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "content": {
                    "type": "object",
                    "properties": {
                        "info_lines": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "retrieval": {
                    "type": "object",
                    "properties": {
                        "mechanisms": {
                            "type": "object",
                            "properties": {
                                "ipld_bitswap": {
                                    "type": "boolean"
                                },
                                "piece_rrhttp": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "sla": {
                            "type": "object",
                            "properties": {
                                "info_lines": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "api.GetSubscribedStorageProvidersResponse": {
            "type": "object",
            "properties": {
                "storage_provider_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.StorageProviderInfo"
                    }
                }
            }
        },
        "api.HealthResponse": {
            "type": "object",
            "properties": {
                "alive": {
                    "type": "boolean"
                }
            }
        },
        "api.LegendEntry": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "api.MailboxMessage": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "api.PieceSource": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                }
            }
        },
        "api.Policy": {
            "type": "object",
            "properties": {
                "clauses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.PolicyClause"
                    }
                }
            }
        },
        "api.PolicyClause": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "description": "TODO: better type?"
                }
            }
        },
        "api.ReplicationConstraint": {
            "type": "object",
            "properties": {
                "constraint_id": {
                    "type": "integer"
                },
                "constraint_max": {
                    "type": "integer"
                }
            }
        },
        "api.ResponseEnvelope": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_slug": {
                    "type": "string"
                },
                "info_lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "request_id": {
                    "type": "string"
                },
                "response": {},
                "response_code": {
                    "type": "integer"
                },
                "response_entries": {
                    "type": "integer"
                },
                "response_state_epoch": {
                    "type": "integer"
                },
                "response_timestamp": {
                    "type": "string"
                }
            }
        },
        "api.StorageContract": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "object",
                    "properties": {
                        "info_lines": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "retrieval": {
                    "type": "object",
                    "properties": {
                        "mechanisms": {
                            "type": "object",
                            "properties": {
                                "ipld_bitswap": {
                                    "type": "boolean"
                                },
                                "piece_rrhttp": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "sla": {
                            "type": "object",
                            "properties": {
                                "info_lines": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "api.StorageProviderInfo": {
            "type": "object",
            "properties": {
                "bytes_stored": {
                    "type": "integer"
                },
                "cids_stored": {
                    "type": "integer"
                },
                "collections_stored": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "last_deal_date": {
                    "type": "string"
                },
                "sp_id": {
                    "type": "string"
                },
                "subscription_date": {
                    "type": "string"
                }
            }
        },
        "api.TenantSettings": {
            "type": "object",
            "properties": {
                "auto_approve": {
                    "type": "boolean"
                },
                "auto_suspend": {
                    "type": "boolean"
                }
            }
        },
        "api.Wallet": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "true - active dealmaking from this wallet, false - still counts as an associated wallet",
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "api.spade.storage",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Spade Tenant API",
	Description:      "This is the API for the Spade Tenant Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
