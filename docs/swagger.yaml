basePath: /
definitions:
  api.ApproveStorageProviders:
    properties:
      sp_ids:
        items:
          type: string
        type: array
    type: object
  api.CreateCollectionRequest:
    properties:
      name:
        type: string
      piece_source:
        $ref: '#/definitions/api.PieceSource'
      replication_constraints:
        items:
          $ref: '#/definitions/api.ReplicationConstraint'
        type: array
    type: object
  api.CreateCollectionResponse:
    properties:
      collection_id:
        type: integer
      status:
        type: string
    type: object
  api.EligibleStorageProvider:
    properties:
      sp_id:
        type: string
      subscribed:
        type: boolean
    type: object
  api.GetEligibleStorageProvidersResponse:
    properties:
      eligible_storage_providers:
        items:
          $ref: '#/definitions/api.EligibleStorageProvider'
        type: array
    type: object
  api.GetSubscribedStorageProvidersResponse:
    properties:
      storage_provider_info:
        items:
          $ref: '#/definitions/api.StorageProviderInfo'
        type: array
    type: object
  api.HealthResponse:
    properties:
      alive:
        type: boolean
    type: object
  api.PieceSource:
    properties:
      method:
        type: string
    type: object
  api.PolicyClause:
    properties:
      attribute:
        type: string
      operator:
        type: string
      value:
        description: 'TODO: better type?'
    type: object
  api.ReplicationConstraint:
    properties:
      constraint_id:
        type: integer
      constraint_max:
        type: integer
    type: object
  api.ResponseEnvelope:
    properties:
      error_code:
        type: integer
      error_lines:
        items:
          type: string
        type: array
      error_slug:
        type: string
      info_lines:
        items:
          type: string
        type: array
      request_id:
        type: string
      response: {}
      response_code:
        type: integer
      response_entries:
        type: integer
      response_state_epoch:
        type: integer
      response_timestamp:
        type: string
    type: object
  api.SetPolicyRequest:
    properties:
      clauses:
        items:
          $ref: '#/definitions/api.PolicyClause'
        type: array
    type: object
  api.SetPolicyResponse:
    type: object
  api.SetStorageContractRequest:
    properties:
      content:
        properties:
          info_lines:
            items:
              type: string
            type: array
        type: object
      retrieval:
        properties:
          mechanisms:
            properties:
              ipld_bitswap:
                type: boolean
              piece_rrhttp:
                type: boolean
            type: object
          sla:
            properties:
              info_lines:
                items:
                  type: string
                type: array
            type: object
        type: object
    type: object
  api.SetStorageContractResponse:
    properties:
      cid:
        type: string
    type: object
  api.StorageProviderInfo:
    properties:
      bytes_stored:
        type: integer
      cids_stored:
        type: integer
      collections_stored:
        items:
          type: string
        type: array
      last_deal_date:
        type: string
      sp_id:
        type: string
      subscription_date:
        type: string
    type: object
host: api.spade.storage
info:
  contact:
    name: API Support
    url: https://docs.spade.storage
  description: This is the API for the Spade Tenant Application
  license:
    name: Apache 2.0 Apache-2.0 OR MIT
    url: https://github.com/data-preservation-programs/spade/blob/master/LICENSE.md
  termsOfService: https://spade.storage
  title: Spade Tenant API
  version: 1.0.0
paths:
  /collections:
    post:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: Collection to create
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.CreateCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                Response:
                  $ref: '#/definitions/api.CreateCollectionResponse'
              type: object
      summary: Creates a new collection
  /health:
    get:
      description: This endpoint is used to check the health of the service
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                Response:
                  $ref: '#/definitions/api.HealthResponse'
              type: object
      summary: Simple health check endpoint
  /policies:
    post:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: New policy to update to
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.SetPolicyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                Response:
                  $ref: '#/definitions/api.SetPolicyResponse'
              type: object
      summary: Set or update a policy
  /policies/storage-contract:
    post:
      description: Updates the storage contract *note* this will require SPs to resubscribe
        if changed
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: New Storage Contract to update to
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.SetStorageContractRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                Response:
                  $ref: '#/definitions/api.SetStorageContractResponse'
              type: object
      summary: Update storage contract
  /storage-providers/approve:
    post:
      description: 'Note: This is only required if auto_approve is false, requiring
        manual approval of SP subscription'
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: List of SP IDs to approve
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ApproveStorageProviders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                Response:
                  $ref: '#/definitions/api.GetEligibleStorageProvidersResponse'
              type: object
      summary: Approves a list of Storage Providers to work with the tenant
  /storage-providers/eligible:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                Response:
                  $ref: '#/definitions/api.GetEligibleStorageProvidersResponse'
              type: object
      summary: Get list of Storage Providers not yet working with the tenant
  /storage-providers/subscribed:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                Response:
                  $ref: '#/definitions/api.GetSubscribedStorageProvidersResponse'
              type: object
      summary: Get list of Storage Providers already working with the tenant, and
        their stats
swagger: "2.0"
