basePath: /tenant
definitions:
  api.Address:
    properties:
      address:
        type: string
      is_signing:
        description: true - active dealmaking from this address, false - still counts
          as an associated wallet
        type: boolean
    type: object
  api.Collection:
    properties:
      id:
        description: 'todo: UUIDs'
        type: string
      name:
        type: string
      replication_constraints:
        items:
          $ref: '#/definitions/api.ReplicationConstraint'
        type: array
    type: object
  api.CreateCollectionRequest:
    properties:
      name:
        type: string
      piece_source:
        $ref: '#/definitions/api.PieceSource'
      replication_constraints:
        items:
          $ref: '#/definitions/api.ReplicationConstraint'
        type: array
    type: object
  api.CreateCollectionResponse:
    properties:
      collection_id:
        type: integer
      status:
        type: string
    type: object
  api.EligibilityClause:
    properties:
      attribute:
        type: string
      operator:
        type: string
      value:
        description: 'TODO: type - either []string or string'
    type: object
  api.EligibilityCriteria:
    properties:
      clauses:
        items:
          $ref: '#/definitions/api.EligibilityClause'
        type: array
    type: object
  api.GetStorageContractResponse:
    properties:
      cid:
        type: string
      content:
        properties:
          info_lines:
            items:
              type: string
            type: array
        type: object
      retrieval:
        properties:
          mechanisms:
            properties:
              ipld_bitswap:
                type: boolean
              piece_rrhttp:
                type: boolean
            type: object
          sla:
            properties:
              info_lines:
                items:
                  type: string
                type: array
            type: object
        type: object
    type: object
  api.Label:
    properties:
      id:
        type: string
      label:
        type: string
    type: object
  api.PieceSource:
    properties:
      method:
        type: string
    type: object
  api.ReplicationConstraint:
    properties:
      constraint_id:
        type: integer
      constraint_max:
        type: integer
    type: object
  api.ResponseEnvelope:
    properties:
      error_code:
        type: integer
      error_lines:
        items:
          type: string
        type: array
      error_slug:
        type: string
      info_lines:
        items:
          type: string
        type: array
      request_id:
        type: string
      response: {}
      response_code:
        type: integer
      response_entries:
        type: integer
      response_state_epoch:
        type: integer
      response_timestamp:
        type: string
    type: object
  api.Settings:
    properties:
      auto_approve:
        type: boolean
      auto_suspend:
        type: boolean
    type: object
  api.StatusResponse:
    properties:
      alive:
        type: boolean
    type: object
  api.StorageContract:
    properties:
      content:
        properties:
          info_lines:
            items:
              type: string
            type: array
        type: object
      retrieval:
        properties:
          mechanisms:
            properties:
              ipld_bitswap:
                type: boolean
              piece_rrhttp:
                type: boolean
            type: object
          sla:
            properties:
              info_lines:
                items:
                  type: string
                type: array
            type: object
        type: object
    type: object
  api.StorageProvider:
    properties:
      sp_id:
        type: string
      status:
        description: '* ENUM: [ eligible, pending-approval, active, suspended ]'
        type: string
      subscription_date:
        type: string
    type: object
  api.StorageProviderIDs:
    properties:
      sp_ids:
        items:
          type: string
        type: array
    type: object
host: api.spade.storage
info:
  contact:
    name: API Support
    url: https://docs.spade.storage
  description: This is the API for the Spade Tenant Application
  license:
    name: Apache 2.0 Apache-2.0 OR MIT
    url: https://github.com/data-preservation-programs/spade/blob/master/LICENSE.md
  termsOfService: https://spade.storage
  title: Spade Tenant API
  version: 1.0.0
paths:
  /address:
    delete:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: addresses to delete
        in: body
        name: addresses
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Address'
                  type: array
              type: object
      summary: Delete addresses used by a tenant
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Address'
                  type: array
              type: object
      summary: Get addresses used by a tenant
    put:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: New addresses to add or change is_signing flag of
        in: body
        name: addresses
        required: true
        schema:
          items:
            $ref: '#/definitions/api.Address'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Address'
                  type: array
              type: object
      summary: Update addresses associated with a tenant
  /collections:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Collection'
                  type: array
              type: object
      summary: Gets info about collections
    post:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: Collection to create
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.CreateCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.CreateCollectionResponse'
              type: object
      summary: Creates a new collection
  /constraint-labels:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Label'
                  type: array
              type: object
      summary: List all constraint labels for the tenant
  /eligibility-criteria:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.EligibilityCriteria'
              type: object
      summary: Get sp eligibility criteria
    post:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: New eligibility criteria to update to
        in: body
        name: elibility_criteria
        required: true
        schema:
          $ref: '#/definitions/api.EligibilityCriteria'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.EligibilityCriteria'
              type: object
      summary: Set sp eligibility criteria
  /settings:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.Settings'
              type: object
      summary: Get the currently active Tenant Settings
    post:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: New settings to apply
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/api.Settings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.Settings'
              type: object
      summary: Apply new Tenant Settings
  /status:
    get:
      description: This endpoint is used to check the health of the service
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.StatusResponse'
              type: object
      summary: Simple health check endpoint
  /storage-contract:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.GetStorageContractResponse'
              type: object
      summary: Get tenant storage contract
    post:
      description: Updates the storage contract *note* this will require SPs to resubscribe
        if changed
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: New Storage Contract to update to
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.StorageContract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.StorageContract'
              type: object
      summary: Update storage contract
  /storage-providers:
    get:
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.StorageProvider'
                  type: array
              type: object
      summary: Get list of Storage Providers
  /storage-providers/approve:
    post:
      description: 'Note: This is only required if auto_approve is false, requiring
        manual approval of SP subscription'
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: List of SP IDs to approve
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.StorageProviderIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.StorageProvider'
                  type: array
              type: object
      summary: Approves a list of Storage Providers to work with the tenant
  /storage-providers/suspend:
    post:
      description: 'Note: This is only required if auto_suspend is false, as manual
        suspension is required'
      parameters:
      - description: Auth token
        in: header
        name: token
        required: true
        type: string
      - description: List of SP IDs to suspend
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.StorageProviderIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.StorageProvider'
                  type: array
              type: object
      summary: Suspend storage providers
swagger: "2.0"
