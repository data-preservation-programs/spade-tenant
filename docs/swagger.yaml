basePath: /tenant
definitions:
  api.Address:
    properties:
      actor_id:
        description: TODO :swagger docs should be null not 0
        type: integer
      address:
        type: string
      is_signing:
        description: true - active dealmaking from this address, false - still counts
          as an associated wallet
        type: boolean
    type: object
  api.AddressMutable:
    properties:
      address:
        type: string
      is_signing:
        description: true - active dealmaking from this address, false - still counts
          as an associated wallet
        type: boolean
    type: object
  api.AddressedStorageContract:
    properties:
      cid:
        type: string
      storage_contract:
        $ref: '#/definitions/api.StorageContract'
    type: object
  api.Collection:
    properties:
      deal_params:
        $ref: '#/definitions/api.DealParams'
      inactive:
        type: boolean
      name:
        type: string
      piece_list_source:
        $ref: '#/definitions/api.PieceListSource'
      replication_constraints:
        items:
          $ref: '#/definitions/api.ReplicationConstraint'
        type: array
      uuid:
        type: string
    type: object
  api.DealParams:
    properties:
      duration_days:
        type: integer
      start_within_hours:
        type: integer
    type: object
  api.EligibilityClause:
    properties:
      attribute:
        type: string
      operator:
        type: string
      value:
        description: 'TODO: type - either []string or string'
    type: object
  api.EligibilityCriteria:
    properties:
      clauses:
        items:
          $ref: '#/definitions/api.EligibilityClause'
        type: array
    type: object
  api.Label:
    properties:
      label:
        type: string
      options:
        additionalProperties:
          type: integer
        description: 'example: {"CA": 10, "US": 20}'
        type: object
      uuid:
        type: string
    type: object
  api.MutableCollection:
    properties:
      deal_params:
        $ref: '#/definitions/api.DealParams'
      inactive:
        type: boolean
      name:
        type: string
      piece_list_source:
        $ref: '#/definitions/api.PieceListSource'
      replication_constraints:
        items:
          $ref: '#/definitions/api.ReplicationConstraint'
        type: array
    type: object
  api.PieceListSource:
    properties:
      connection_details:
        description: 'TODO: better types / validation for the connection details'
        type: string
      method:
        type: string
      poll_interval_hours:
        type: integer
    type: object
  api.ReplicationConstraint:
    properties:
      constraint_id:
        type: integer
      constraint_max:
        type: integer
    type: object
  api.ResponseEnvelope:
    properties:
      error_code:
        type: integer
      error_lines:
        items:
          type: string
        type: array
      error_slug:
        type: string
      info_lines:
        items:
          type: string
        type: array
      request_uuid:
        type: string
      response: {}
      response_code:
        type: integer
      response_entries:
        type: integer
      response_state_epoch:
        type: integer
      response_timestamp:
        type: string
    type: object
  api.Settings:
    properties:
      max_in_flight_gib:
        type: integer
      sp_auto_approve:
        type: boolean
      sp_auto_suspend:
        type: boolean
    type: object
  api.StorageContract:
    properties:
      content:
        properties:
          info_lines:
            items:
              type: string
            type: array
        type: object
      retrieval:
        properties:
          mechanisms:
            properties:
              ipld_bitswap:
                type: boolean
              piece_rrhttp:
                type: boolean
            type: object
          sla:
            properties:
              info_lines:
                items:
                  type: string
                type: array
            type: object
        type: object
    type: object
  api.StorageProvider:
    properties:
      first_activated_at:
        type: string
      sp_id:
        type: integer
      state:
        description: |-
          State:
          * eligible: The SP is eligible to work with the tenant, but has not yet begun the subscription process
          * pending: The SP has begun the subscription process, but has not yet been approved by the tenant (note: only valid if auto-approve=false)
          * active: The SP is active and working with the tenant. Deals may be made with this SP.
          * suspended: The SP is suspended and deals may not be made with this SP, until it is un-suspended
        enum:
        - eligible
        - pending
        - active
        - suspended
        type: string
      status_last_changed:
        type: string
    type: object
  api.StorageProviderIDs:
    properties:
      sp_ids:
        items:
          type: integer
        type: array
    type: object
host: api.spade.storage
info:
  contact:
    name: API Support
    url: https://docs.spade.storage
  description: This is the API for the Spade Tenant Application
  license:
    name: Apache 2.0 Apache-2.0 OR MIT
    url: https://github.com/data-preservation-programs/spade/blob/master/LICENSE.md
  termsOfService: https://spade.storage
  title: Spade Tenant API
  version: 1.0.0
paths:
  /addresses:
    delete:
      parameters:
      - description: addresses to delete
        in: body
        name: addresses
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Address'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: Delete addresses used by a tenant
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Address'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: Get addresses used by a tenant
    put:
      parameters:
      - description: New addresses to add or change is_signing flag of
        in: body
        name: addresses
        required: true
        schema:
          items:
            $ref: '#/definitions/api.AddressMutable'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Address'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: Update addresses associated with a tenant
  /collections:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.Collection'
              type: object
      security:
      - apiKey: []
      summary: Gets info about collections
    post:
      parameters:
      - description: Collection to create
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.MutableCollection'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.Collection'
              type: object
      security:
      - apiKey: []
      summary: Creates a new collection
  /collections/:collectionUUID:
    delete:
      parameters:
      - description: Collection UUID to modify
        in: path
        name: collectionUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  type: boolean
              type: object
      security:
      - apiKey: []
      summary: Delete a collection
    put:
      parameters:
      - description: Collection UUID to modify
        in: path
        name: collectionUUID
        required: true
        type: string
      - description: Collection data to update
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.MutableCollection'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.Collection'
              type: object
      security:
      - apiKey: []
      summary: Modify a collection
  /constraint-labels:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.Label'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: List all constraint labels for the tenant
  /settings:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.Settings'
              type: object
      security:
      - apiKey: []
      summary: Get the currently active Tenant Settings
    post:
      parameters:
      - description: New settings to apply
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/api.Settings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.Settings'
              type: object
      security:
      - apiKey: []
      summary: Apply new Tenant Settings
  /sp:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.StorageProvider'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: Get list of Storage Providers
  /sp/approve:
    post:
      description: 'Note: This is only required if auto_approve is false, requiring
        manual approval of SP subscription'
      parameters:
      - description: List of SP IDs to approve
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.StorageProviderIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.StorageProvider'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: Approves a list of Storage Providers to work with the tenant
  /sp/eligibility-criteria:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.EligibilityCriteria'
              type: object
      security:
      - apiKey: []
      summary: Get sp eligibility criteria
    post:
      parameters:
      - description: New eligibility criteria to update to
        in: body
        name: elibility_criteria
        required: true
        schema:
          $ref: '#/definitions/api.EligibilityCriteria'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.EligibilityCriteria'
              type: object
      security:
      - apiKey: []
      summary: Set sp eligibility criteria
  /sp/suspend:
    post:
      description: 'Note: This is only required if auto_suspend is false, as manual
        suspension is required'
      parameters:
      - description: List of SP IDs to suspend
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.StorageProviderIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.StorageProvider'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: Suspend storage providers
  /sp/unsuspend:
    post:
      parameters:
      - description: List of SP IDs to unsuspend
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.StorageProviderIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  items:
                    $ref: '#/definitions/api.StorageProvider'
                  type: array
              type: object
      security:
      - apiKey: []
      summary: Unsuspend a storage provider
  /status:
    get:
      description: This endpoint is used to check the health of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  type: string
              type: object
      security:
      - apiKey: []
      summary: Simple health check endpoint
  /storage-contract:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.AddressedStorageContract'
              type: object
      security:
      - apiKey: []
      summary: Get tenant storage contract
    post:
      description: |-
        Updates the storage contract. <br/>
        <br/> *Note* this will require SPs to resubscribe if changed.
        <br/> *Note* CID is optional, if specified, then `storage_contract` becomes optional.
        If both are specified, then we will validate that the CID matches the proposed storage contract and return an error if not.
        If only CID is specified, then we will fetch it and update the storage contract to it.
      parameters:
      - description: New Storage Contract to update to
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/api.AddressedStorageContract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ResponseEnvelope'
            - properties:
                response:
                  $ref: '#/definitions/api.AddressedStorageContract'
              type: object
      security:
      - apiKey: []
      summary: Update storage contract
securityDefinitions:
  apiKey:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
