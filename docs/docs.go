// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://spade.storage",
        "contact": {
            "name": "API Support",
            "url": "https://docs.spade.storage"
        },
        "license": {
            "name": "Apache 2.0 Apache-2.0 OR MIT",
            "url": "https://github.com/data-preservation-programs/spade/blob/master/LICENSE.md"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addresses": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get addresses used by a tenant",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update addresses associated with a tenant",
                "parameters": [
                    {
                        "description": "New addresses to add or change is_signing flag of",
                        "name": "addresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Address"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates addresses associated with a tenant",
                "parameters": [
                    {
                        "description": "New addresses to add",
                        "name": "addresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddressMutable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.AddressMutable"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete addresses used by a tenant",
                "parameters": [
                    {
                        "description": "addresses to delete",
                        "name": "addresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets info about collections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.CollectionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new collection",
                "parameters": [
                    {
                        "description": "Collection to create",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CollectionResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.CollectionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/collections/:collectionUUID/replication-constraints": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get ReplicationConstraints used by a tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ReplicationConstraint"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Creates or updates ReplicationConstraints associated with a tenant and collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New replication constraints to add or change",
                        "name": "replication_constraints",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ReplicationConstraint"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ReplicationConstraint"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes ReplicationConstraints used by a tenant.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ReplicationConstraint"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/collections/{collectionUUID}": {
            "put": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Modify a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection UUID to modify",
                        "name": "collectionUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Collection data to update",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CollectionResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.CollectionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection UUID to modify",
                        "name": "collectionUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/constraint-labels": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all constraint labels for the tenant",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.LabelResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get the currently active Tenant Settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/db.TenantSettings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Apply new Tenant Settings",
                "parameters": [
                    {
                        "description": "New settings to apply",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.TenantSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/db.TenantSettings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of Storage Providers in all states",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.TenantSPResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/approve": {
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Note: This is only required if auto_approve is false, requiring manual approval of SP subscription",
                "produces": [
                    "application/json"
                ],
                "summary": "Approves a list of Storage Providers to work with the tenant",
                "parameters": [
                    {
                        "description": "List of SP IDs to approve",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StorageProviderIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.TenantSPResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/eligibility-criteria": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get sp eligibility criteria",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.TenantSPEligibilityClausesResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/eligibility-criteria/attribute/:attribute": {
            "delete": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete sp eligibility criteria",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/sp/suspend": {
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Note: This is only required if auto_suspend is false, as manual suspension is required",
                "produces": [
                    "application/json"
                ],
                "summary": "Suspend storage providers",
                "parameters": [
                    {
                        "description": "List of SP IDs to suspend",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StorageProviderIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.TenantSPResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sp/unsuspend": {
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Unsuspend a storage provider",
                "parameters": [
                    {
                        "description": "List of SP IDs to unsuspend",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StorageProviderIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.TenantSPResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "This endpoint is used to check the health of the service",
                "produces": [
                    "application/json"
                ],
                "summary": "Simple health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/storage-contract": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get tenant storage contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.AddressedStorageContract"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Updates the storage contract. \u003cbr/\u003e\n\u003cbr/\u003e *Note* this will require SPs to resubscribe if changed.\n\u003cbr/\u003e *Note* CID is optional, if specified, then ` + "`" + `storage_contract` + "`" + ` becomes optional.\nIf both are specified, then we will validate that the CID matches the proposed storage contract and return an error if not.\nIf only CID is specified, then we will fetch it and update the storage contract to it.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update storage contract",
                "parameters": [
                    {
                        "description": "New Storage Contract to update to",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddressedStorageContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.ResponseEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/api.AddressedStorageContract"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AddressMutable": {
            "type": "object",
            "properties": {
                "actor_id": {
                    "type": "integer"
                },
                "address_robust": {
                    "type": "string"
                },
                "is_signing": {
                    "type": "boolean"
                }
            }
        },
        "api.AddressedStorageContract": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "storage_contract": {
                    "$ref": "#/definitions/api.StorageContract"
                }
            }
        },
        "api.CandidateSP": {
            "type": "object",
            "properties": {
                "attribute_values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "provider_metadata": {
                    "description": "TODO: struct for what we expect here (i.e, max_bytes_in_flight)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pgtype.JSONB"
                        }
                    ]
                },
                "provider_tenant_state": {
                    "type": "string"
                },
                "provider_tenant_state_info": {
                    "type": "string"
                },
                "sp_id": {
                    "type": "integer"
                }
            }
        },
        "api.CollectionResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "collection_id": {
                    "type": "string"
                },
                "deal_params": {
                    "$ref": "#/definitions/pgtype.JSONB"
                },
                "name": {
                    "type": "string"
                },
                "piece_list_source": {
                    "$ref": "#/definitions/pgtype.JSONB"
                }
            }
        },
        "api.LabelResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "labelOptions": {
                    "$ref": "#/definitions/pgtype.JSONB"
                }
            }
        },
        "api.ReplicationConstraint": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "string"
                },
                "constraint_id": {
                    "type": "integer"
                },
                "constraint_max": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "api.ResponseEnvelope": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_slug": {
                    "type": "string"
                },
                "info_lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "request_uuid": {
                    "type": "string"
                },
                "response": {},
                "response_code": {
                    "type": "integer"
                },
                "response_entries": {
                    "type": "integer"
                },
                "response_state_epoch": {
                    "type": "integer"
                },
                "response_timestamp": {
                    "type": "string"
                }
            }
        },
        "api.StorageContract": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "object",
                    "properties": {
                        "info_lines": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "retrieval": {
                    "type": "object",
                    "properties": {
                        "mechanisms": {
                            "type": "object",
                            "properties": {
                                "ipld_bitswap": {
                                    "type": "boolean"
                                },
                                "piece_rrhttp": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "sla": {
                            "type": "object",
                            "properties": {
                                "info_lines": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "api.StorageProviderIDs": {
            "type": "object",
            "properties": {
                "sp_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.SubscriptionEventPayload": {
            "type": "object",
            "properties": {
                "authorization": {
                    "type": "string"
                },
                "sp_id": {
                    "type": "integer"
                },
                "storage_contract_cid": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "integer"
                }
            }
        },
        "api.TenantBrokerPayload": {
            "type": "object",
            "properties": {
                "candidate_sps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.CandidateSP"
                    }
                },
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Collection"
                    }
                },
                "tenant_addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Address"
                    }
                },
                "tenant_id": {
                    "type": "integer"
                },
                "tenant_settings": {
                    "$ref": "#/definitions/db.TenantSettings"
                },
                "tenant_storage_contract_cid": {
                    "type": "string"
                }
            }
        },
        "api.TenantSPEligibilityClausesResponse": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/db.ComparisonOperator"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "api.TenantSPResponse": {
            "type": "object",
            "properties": {
                "sp_id": {
                    "type": "integer"
                },
                "tenantSpState": {
                    "$ref": "#/definitions/db.TenantSpState"
                },
                "tenantSpsMeta": {
                    "$ref": "#/definitions/pgtype.JSONB"
                }
            }
        },
        "db.Address": {
            "type": "object",
            "properties": {
                "actor_id": {
                    "type": "integer"
                },
                "address_robust": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "is_signing": {
                    "type": "boolean"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.Collection": {
            "type": "object",
            "properties": {
                "collection_active": {
                    "type": "boolean"
                },
                "collection_deal_params": {
                    "$ref": "#/definitions/pgtype.JSONB"
                },
                "collection_id": {
                    "type": "string"
                },
                "collection_name": {
                    "type": "string"
                },
                "collection_piece_source": {
                    "$ref": "#/definitions/pgtype.JSONB"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "replication_constraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.ReplicationConstraint"
                    }
                },
                "tenant_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.ComparisonOperator": {
            "type": "string",
            "enum": [
                "\u003e",
                "\u003c",
                "=",
                "\u003e=",
                "\u003c=",
                "in",
                "nin",
                "!="
            ],
            "x-enum-varnames": [
                "GreaterThan",
                "LessThan",
                "EqualTo",
                "GreaterThanOrEqual",
                "LessThanOrEqual",
                "IncludedIn",
                "ExcludedFrom",
                "NotEqualTo"
            ]
        },
        "db.ReplicationConstraint": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "string"
                },
                "constraint_id": {
                    "type": "integer"
                },
                "constraint_max": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "tenant_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.TenantSettings": {
            "type": "object",
            "properties": {
                "max_in_flight_gib": {
                    "type": "integer"
                },
                "sp_auto_approve": {
                    "type": "boolean"
                },
                "sp_auto_suspend": {
                    "type": "boolean"
                }
            }
        },
        "db.TenantSpState": {
            "type": "string",
            "enum": [
                "eligible",
                "pending",
                "active",
                "suspended",
                "disabled"
            ],
            "x-enum-varnames": [
                "TenantSpStateEligible",
                "TenantSpStatePending",
                "TenantSpStateActive",
                "TenantSpStateSuspended",
                "TenantSpStateDisabled"
            ]
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "pgtype.JSONB": {
            "type": "object",
            "properties": {
                "bytes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "$ref": "#/definitions/pgtype.Status"
                }
            }
        },
        "pgtype.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Undefined",
                "Null",
                "Present"
            ]
        }
    },
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "api.spade.storage",
	BasePath:         "/tenant",
	Schemes:          []string{},
	Title:            "Spade Tenant API",
	Description:      "This is the API for the Spade Tenant Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
